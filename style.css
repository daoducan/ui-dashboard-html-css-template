@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

/*
Đoạn trên là import font chữ Poppins vào sử dụng trên trang web
Đoạn dưới là khai báo các biến để sử dụng sau này
Các biến mã màu và các biến khoảng cách để tiện sử dụng sau này
*/
:root{
    --color-primary: #6C9BCF;
    --color-danger: #FF0060;
    --color-success: #1B9C85;
    --color-warning: #F7D060;
    --color-white: #fff;
    --color-info-dark: #7d8da1;
    --color-dark: #363949;
    --color-light: rgba(132, 139, 200, 0.18);
    --color-dark-variant: #677483;
    --color-background: #f6f6f9;

    --card-border-radius: 2rem;
    --border-radius-1: 0.4rem;
    --border-radius-2: 1.2rem;

    --card-padding: 1.8rem;
    --padding-1: 1.2rem;

    --box-shadow: 0 2rem 3rem var(--color-light);
}

.dark-mode-variables{
    --color-background: #181a1e;
    --color-white: #202528;
    --color-dark: #edeffd;
    --color-dark-variant: #a3bdcc;
    --color-light: rgba(0, 0, 0, 0.4);
    --box-shadow: 0 2rem 3rem var(--color-light);
}

/*
Đoạn bên dưới là Reset CSS trước khi chỉnh CSS cho trang web
Reset CSS để cho CSS về các chỉ số chuẩn cho tất cả các trình duyệt, sau đó từ đó mới viết CSS cho trang web
*/
*{
    margin: 0;
    padding: 0;
    outline: 0;
    appearance: 0;
    border: 0;
    text-decoration: none;
    box-sizing: border-box;
}

/*
Set font-size cho <html> là 14px để lấy đó làm chuẩn
Sau này khai báo width = 2rem thì có nghĩa là = 2*14 = 28px
khai báo height = 3rem thì có nghĩa là = 3*14 = 36px
*/
html{
    font-size: 14px;
}

body{
    width: 100vw;
    height: 100vh;
    font-family: 'Poppins', sans-serif;
    font-size: 0.88rem;
    user-select: none;
    overflow-x: hidden;
    color: var(--color-dark);
    background-color: var(--color-background);
}

a{
    color: var(--color-dark);
}

img{
    display: block;
    width: 100%;
    object-fit: cover;
}

h1{
    font-weight: 800;
    font-size: 1.8rem;
}

h2{
    font-weight: 600;
    font-size: 1.4rem;
}

h3{
    font-weight: 500;
    font-size: 0.87rem;
}

small{
    font-size: 0.76rem;
}

p{
    color: var(--color-dark-variant);
}

b{
    color: var(--color-dark);
}

.text-muted{
    color: var(--color-info-dark);
}

.primary{
    color: var(--color-primary);
}

.danger{
    color: var(--color-danger);
}

.success{
    color: var(--color-success);
}

.warning{
    color: var(--color-warning);
}

/*
.container là thẻ bao trọn toàn bộ nội dung trang Dashboard, hiển thị dưới dạng lưới grid
Chia dashboard ra thành 3 cột, cột 1 (phần aside là left bar) để độ rộng là 12rem
Cột 3 là phần right-bar để độ rộng là 23rem
Còn lại là dành cho phần <main> ở giữa.

Như vậy thì trong .container nên để 3 thẻ chính là <aside> và <main> và <div.right-section>
Để khi viết CSS như bên dưới là có thể chia toàn bộ trang ra thành 3 cột riêng biệt.

Để width = 96% là để cho thừa 2 bên 1 ít, để nội dung nó không bị quá sát với cạnh 2 bên
Điều chỉnh margin để nội dung trang web ở chính giữa, cách đều 2 bên, cách 2 bên 2 khoảng nhỏ bằng nhau
Để khoảng gap = 1.8rem là khoảng cách giữa các cột với nhau, sẽ có 1 khoảng gap ở giữa
*/
.container{
    display: grid;
    grid-template-columns: 12rem auto 23rem;
    width: 96%;
    margin: 0 auto;
    gap: 1.8rem;
}

/*
Điều chỉnh độ dài của thẻ <aside> (left-bar) cho nó dài 100% để tránh thừa thiếu hở trên hở dưới.
*/
aside{
    height: 100vh;
}

/*
Chỉnh sửa phần logo + phần tên + icon close left-sidebar
Cho nó lên thành 1 hàng gồm logo > tên website > icon close button
Vì vậy phải display = flex
*/
aside .toggle{
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 1.4rem;
}

/*
Để display flex là để cho logo và phần site name hiển thị trên cùng 1 dòng.
*/
aside .toggle .logo{
    display: flex;
    gap: 0.5rem;
}

/*Điều chỉnh kích thước của logo là 2rem
2 rem lúc này bằng 2*14 = 28px
14 là kích thước font-size của element <html>
*/
aside .toggle .logo img{
    width: 2rem;
    height: 2rem;
}

/*
set padding-right để cho icon close hiển thị đỡ bị lệch
display = none khi hiển thị trên màn hình rộng. Hiện tại không sử dụng và tạm thời ẩn đi
Khi mà hiển thị trên màn hình mobile hẹp thì mới cần dùng icon close
*/
aside .toggle .close{
    padding-right: 1rem;
    display: none;
}

/*
Tiếp theo là chỉnh CSS cho phần sidebar gồm nhiều items và các icons + item name.
Hiển thị ở chế độ flex dưới dạng cột là hợp lý
Viết style cho sidebar nằm trong một box có box shadow
Chỉnh cho bo góc tròn
Chiều cao thì điều chỉnh hợp lý cho nó khoảng 88vh phù hợp với hiển thị thực tế,
không để chiều cao là 100vh vì còn bớt lại khoảng phía trên cho phần .toggle

set vị trí position: relative; để làm cơ sở element cha cho các item con điều chỉnh phù hợp theo sidebar
Vì sau này sẽ set vị trí của các items con theo top-bottom-left-right sẽ căn cứ vào thằng cha sidebar
set top=1.5rem cho sidebar để cho cân đối cách phần toggle phía trên 1 chút.
transition:?
*/
aside .sidebar{
    display: flex;
    flex-direction: column;
    background-color: var(--color-white);
    box-shadow: var(--box-shadow);
    border-radius: 15px;
    height: 88vh;
    position: relative;
    top: 1.5rem;
    transition: all 0.3s ease;
}

/*Khi đưa chuột vào sidebar box thì nó loại bỏ box-shadow
Hiệu ứng làm cho website thêm thú vị sinh động hơn, trực quan hơn
*/
aside .sidebar:hover{
    box-shadow: none;
}

/*
hiển thị các sidebar items (thẻ <a>) dưới dạng flex để các icon và item name hiển thị ở trên cùng 1 dòng
căn cho nội dung của thẻ <a> nằm ở giữa
Màu text set cho nó với màu tối
chiều cao cho mỗi item của sidebar là 3.7rem
gap là khoảng cách giữa các item là 1em
Đặt position là relative để làm cơ sở cho các elements con bên trong thẻ <a>
margin-left để 2rem cho cân đối
transition:?
*/
aside .sidebar a{
    display: flex;
    align-items: center;
    color: var(--color-info-dark);
    height: 3.7rem;
    gap: 1rem;
    position: relative;
    margin-left: 2rem;
    transition: all 0.3s ease;
}

/*
chỉnh sửa kích thước của icon
set hiệu ứng transition:
*/
aside .sidebar a span{
    font-size: 1.6rem;
    transition: all 0.3s ease;
}

/*
last-child là phần logout, cho nó tụt hẳn xuống phía dưới, tách biệt với đáp trên
Vì vậy cần set position = absolute là set vị trí so với element cha (element cha phải có position khác với static)
element cha đã set position = relative; ở bước trước rồi
set bottom: 2rem là để cho nó tụt xuống phía dưới cùng và set khoảng cách với đáy là 2rem
độ rộng width để 100%
*/
aside .sidebar a:last-child{
    position: absolute;
    bottom: 2rem;
    width: 100%;
}

/*
các item mà active tức là đang được người dùng chọn focus vào nội dung của phần item đó thì sẽ có style khác
nổi bật hơn so với các item còn lại

set width vẫn là 100%
set color là màu riêng biệt, khác biệt so với các item khác
set background cũng phải khác so với các item khác
margin-left 0 cho cân đối.
*/
aside .sidebar a.active{
    width: 100%;
    color: var(--color-primary);
    background-color: var(--color-light);
    margin-left: 0;
}

/*
Thêm cái thằng icon gạch dọc ở phía trước thẻ item actived để cho nó có điểm nhấn
set width height cho cân đối
set màu cho nó bằng thuộc tính background color, vì content = '' nên không set thuộc tính color cho nó được
*/
aside .sidebar a.active::before{
    content: '';
    width: 6px;
    height: 18px;
    background-color: var(--color-primary);
}

/*
set color cho icon
margin-left
*/
aside .sidebar a.active span{
    color: var(--color-primary);
    margin-left: calc(1rem - 3px);
}

/*
Set màu cho các text items khi di chuột vào
*/
aside .sidebar a:hover{
    color: var(--color-primary);
}

/*Set margin-left cho phần icon khi di chuột vào thì các item nó sẽ chuyển động
Sinh động hơn, UI/UX trực quan hơn
*/
aside .sidebar a:hover span{
    margin-left: 0.6rem;
}

/*
Chỉnh phần message thông báo bên cạnh các items
Set màu nền cho nó
Set padding cho nó cân đối, set màu chữ cho sáng lên
set font-size cho hợp lý, set border-radius cho hợp lý
*/
aside .sidebar .message-count{
    background-color: var(--color-danger);
    padding: 2px 6px;
    color: var(--color-white);
    font-size: 11px;
    border-radius: var(--border-radius-1);
}

/*
Tiếp theo sang phần thứ 2 là cột nội dung <main>
Set margin-top = 1.4rem cho đều, cân đối so với phần <aside> lúc trước
*/
main{
    margin-top: 1.4rem;
}

/*Viết style cho thằng Analyse
repeat(3, 1fr) có nghĩa là chia khoảng trống của .analyse ra thành 3 phần bằng nhau
grid-template-columns: repeat(3, 1fr) tương đương với grid-template-columns: 1fr 1fr 1fr;
gap là khoảng cách giữa các cột là 1.6rem
*/
main .analyse{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.6rem;
}

/*
Viết nội dung CSS cho từng ô
Set background color + border radius + box-shadow là thành box trong HTML CSS
*/
main .analyse > div{
    background-color: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    margin-top: 1rem;
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
}

/*Khi đưa chuột vào box thì remove box-shadow đi cho trực quan*/
main .analyse > div:hover{
    box-shadow: none;
}

/*
Ở phần này set kiểu hiển thị là display: flex để cho phần .info và .progresss hiển thị trên cùng 1 dòng.
Căn nội dung ở giữa - center
Set cho nó có khoảng gáp ở giữa các thành phần.
*/
main .analyse > div .status{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/*
Style cho phần text ở trong mỗi ô
Margin-left và font-size cho cân đối
*/
main .analyse h3{
    margin-left: 0.6rem;
    font-size: 1rem;
}

/*
Phần inprogess này đang set position là relative để làm cơ sở cho các thành phần bên trong nó
width và height set cụ thể cho nó

*/
main .analyse .progresss{
    position: relative;
    width: 92px;
    height: 92px;
    border-radius: 50%;
}

/*
điều chỉnh chiều dài chiều rộng của svg
*/
main .analyse svg{
    width: 7rem;
    height: 7rem;
}

/*
Style cho hình tròn progress
fill none là không tô màu cho hình circle đó
Stroke-width là độ dày hay mỏng của cái đường viền hình tròn
stroke-linecap: round; là cái đoạn vòng tròn bị cắt thiếu thì nó được bo tròn chứ không phải cắt vuông góc
transform: ?
*/
main .analyse svg circle{
    fill: none;
    stroke-width: 10;
    stroke-linecap: round;
    transform: translate(5px, 5px);
}

/*
thuộc tính stroke: để set màu cho cái hình đường viền tròn
stroke-dashoffset: -30; nghĩa là đường viền tròn đó khuyết mất 1 phần tương ứng với -30, khuyết xuống dưới 1 tí
stroke-dasharray: 200 là định nghĩa điểm bắt đầu của hình tròn đó.
*/
main .analyse .sales svg circle{
    stroke: var(--color-success);
    stroke-dashoffset: -30;
    stroke-dasharray: 200;
}

main .analyse .visits svg circle{
    stroke: var(--color-danger);
    stroke-dashoffset: -30;
    stroke-dasharray: 200;
}

main .analyse .searches svg circle{
    stroke: var(--color-primary);
    stroke-dashoffset: -30;
    stroke-dasharray: 200;
}

/*
Viết CSS cho phần con số % được hiển thị bên trong hình tròn.
Điều chỉnh để nó hiển thị đúng vào giữa của hình tròn
Bắt buộc phải set position là absolute, lúc này vị trí của .percentage sẽ phụ thuộc vào vị chí cha nó là .progresss
Muốn để cho .precentage phụ thuộc vào thằng cha .progresss thì trước đó phải set position=relative cho thằng cha (.processs)
Tiếp theo đó, điều chỉnh vị trí của .percentage
*/
main .analyse .progresss .percentage{
    position: absolute;
    top: -3px;
    left: -1px;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
}

/*
Phần tiếp theo là new-users bên dưới
Set margin-top = 1.3rem để cho cân đối so với phần .analyse phía trên
*/
main .new-users{
    margin-top: 1.3rem;
}

/*
Là danh sách user-list gồm 4 cột. 3 items đầu hiển thị thông tin user, item cuối hiển thị nút thêm user
Chắc chắn là phải để display flex
justify-content: space-around; là các khoảng trống sẽ đưa vào xung quanh nội dung
Dẫn đến việc các item user sẽ cách đều nhau và khoảng cách của chúng bằng nhau
*/
main .new-users .user-list{
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 1.4rem;
    background-color: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    margin-top: 1rem;
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
}

/*Đưa chuột vào thì remove box-shadow giúp giao diện trực quan hơn*/
main .new-users .user-list:hover{
    box-shadow: none;
}

/*
Mỗi một item gồm có 1 ảnh + Tên + thời gian đăng nhập (20 min agos)
Vì vậy mà để nó dạng flex và hiển thị theo column là hợp lý
align-items: center; giúp cho nội dung bên trong căn giữa
*/
main .new-users .user-list .user{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/*
Chỉnh sửa kích thước ảnh cho phù hợp
*/
main .new-users .user-list .user img{
    width: 5rem;
    height: 5rem;
    margin-bottom: 0.4rem;
    border-radius: 50%;
}

/*
Điều chỉnh margin-top để giữ khoảng cách với các thành phần phía trên
*/
main .recent-orders{
    margin-top: 1.3rem;
}

/*
    Tiêu đề cách nội dung bên dưới 1 tí
*/
main .recent-orders h2{
    margin-bottom: 0.8rem;
}

/*
Style cho table bảng

*/
main .recent-orders table{
    background-color: var(--color-white);
    width: 100%;
    padding: var(--card-padding);
    text-align: center;
    box-shadow: var(--box-shadow);
    border-radius: var(--card-border-radius);
    transition: all 0.3s ease;
}

/*
Khi đưa chuột vào table box thì nó remove box shadow, giúp giao diện trở lên trực quan hơn
*/
main .recent-orders table:hover{
    box-shadow: none;
}

/*
Điều chỉnh độ cao của các rows trong table
Cho border-bottom vào thôi, còn những border-top left right ẩn hết
Set color màu chữ cho nội dung bảng
*/
main table tbody td{
    height: 2.8rem;
    border-bottom: 1px solid var(--color-light);
    color: var(--color-dark-variant);
}

/*
last child thì border none hết.
*/
main table tbody tr:last-child td{
    border: none;
}

/*
Style cho cái phần text link "Show all"
text-align: center; để hiển thị ra giữa của bảng table
display: block; là để phần này chiếm hết 1 dòng, các elements phía sau thì sẽ bị đẩy xuống dòng dưới
margin: 1rem auto; giúp điều chỉnh khoảng cách trên dưới là 1rem
Điều chỉnh text color với thuộc tính color: #xxxxxx;
*/
main .recent-orders a{
    text-align: center;
    display: block;
    margin: 1rem auto;
    color: var(--color-primary);
}

/*
Chuyển sang right-section là phần right sidebar nằm ở bên phải trang web, cũng là cột thứ 3 của trang web
Như đã định nghĩa bên trên thì phần .right-section này có độ rộng là 23rem

Điều chỉnh margin-top của phần right-sidebar để cho nó cách đều phía trên cho đồng đều với 2 phần bên cạnh
*/
.right-section{
    margin-top: 1.4rem;
}

/*
Phần right-section sẽ gồm có phần đầu: logo + tên người dùng + nút bấm dark theme - light theme
Phần 2 là 1 box chứa thông tin của user đang đăng nhập, 
Phần 3 là phần Reminders
*/
/*
display: flex để cho nút bấm dark-light theme và tên thông tin người dùng và logo ở trên cùng 1 dòng
justify-content: end; là để cho các nội dung của phần .nav này trôi về phía sau
gap là khoảng cách giữa 2 thành phần bên trong .nav
*/
.right-section .nav{
    display: flex;
    justify-content: end;
    gap: 2rem;
}

/*
Button này là button menu (3 cái gạch ngang) lúc hiển thị trên website màn hình to bình thường thì ẩn nó đi
nó chỉ hiển thị khi website của mình hiển thị trên màn hình mobile thì mới show nút này ra
*/
.right-section .nav button{
    display: none;
}

/*
Chỉnh CSS cho nút dark-mode, light-mode
hiển thị nó dưới dạng flex là để cho 2 nút dark-mode và light-mode hiển thị trên cùng 1 dòng, cạnh nhau
*/
.right-section .dark-mode{
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 1.6rem;
    width: 4.2rem;
    cursor: pointer;
    border-radius: var(--border-radius-1);
    background-color: var(--color-light);
}

/*
Các span trong .dark-mode chính là các icon mặt trăng, mặt trời đại diện cho dark-mode và light-mode
hiển thị display: flex và thêm 2 thuộc tính đi kèm với flex nữa là:
align-items: center; là điều chỉnh nội dung cho no nằm ở giữa theo chiều dọc
justify-content: center; là điều chỉnh nội dung cho nó nằm ở giữa theo chiều ngang
*/
.right-section .dark-mode span{
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    width: 50%;
    height: 100%;
}

/*
định nghĩa style cho nút khi nó ở trạng thái active
Ta sẽ dùng js để khi user click vào button dark-mode thì active nút này lên,
ngược lại khi user click vào button light-mode thì deactive nút dark-mode và active nút light-mode
Giúp cho giao diện trở lên trực quan hơn.
*/
.right-section .dark-mode span.active{
    background-color: var(--color-primary);
    color: white;
    border-radius: var(--border-radius-1);
}

/*
Điều chỉnh CSS cho phần profile chính là phần logo + thông tin 
display: flex là để cho phần text thông tin user và phần logo nằm trên cùng một dòng
gap 2rem là khoảng cách giữa 2 thành phần này
text-align: right là để cho 2 thành phần trên trôi về phía bên phải
*/
.right-section .nav .profile{
    display: flex;
    gap: 2rem;
    text-align: right;
}

/*
Set độ dài rộng cho profile photo
Border radius = 50% thì biến nó thành hình tròn, bo góc 50%
overflow: hidden là để ẩn các phần thừa trên các góc của image đi thì lúc đó profile photo nó mới thực sự hiển thị là một hình tròn
*/
.right-section .nav .profile .profile-photo{
    width: 2.8rem;
    height: 2.8rem;
    border-radius: 50%;
    overflow: hidden;
}

/*
.user-profile là một ô box chứa các thông tin gồm 1 logo + tên người dùng + tên role của người đó
Vì vậy mà hiển thị dạng display: flex là để cho nội dung nó linh hoạt
hiển thị nội dung ở vị trí căn giữa
*/
.right-section .user-profile{
    display: flex;
    justify-content: center;
    text-align: center;
    margin-top: 1rem;
    background-color: var(--color-white);
    padding: var(--card-padding);
    border-radius: var(--card-border-radius);
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
}

.right-section .user-profile:hover{
    box-shadow: none;
}

/*Điều chỉnh kích thước của image file ảnh*/
.right-section .user-profile img{
    width: 11rem;
    height: auto;
    margin-bottom: 0.8rem;
    border-radius: 50%;
}

/*Điều chỉnh vị trí của text h2 (tên người dùng) cho phù hợp*/
.right-section .user-profile h2{
    margin-bottom: 0.2rem;
}

/*
Style cho phần Reminder
set margin-top cho nó để nó giữ khoảng cách với phần trên -> cân đối hơn
*/
.right-section .reminders{
    margin-top: 2rem;
}

/*Phần header gồm 1 title Reminders và một icon hình chuông thông báo
hiển thị dạng flex là chuẩn
align-items: center; là căn nội dung ở giữa theo chiều dọc
justify-content: space-between; là dồn toàn bộ khoảng trống vào giữa 2 thành phần, 2 bên rìa không có khoảng trống.
*/
.right-section .reminders .header{
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.8rem;
}

/*
style cho icon hình quả chuông thông báo

*/
.right-section .reminders .header span{
    padding: 10px;
    box-shadow: var(--box-shadow);
    background-color: var(--color-white);
    border-radius: 50%;
}

/*
display flex là để cho các thành phần bên trong hiển thị trên cùng 1 dòng
align-items: center; là để nội dung căn giữa theo chiều dọc
gap 1rem là khoảng cách giữa các thành phần trong .notification
*/
.right-section .reminders .notification{
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.7rem;
    padding: 1.4rem var(--card-padding);
    border-radius: var(--border-radius-2);
    box-shadow: var(--box-shadow);
    cursor: pointer;
    transition: all 0.3s ease;
    background-color: var(--color-white);
}

.right-section .reminders .notification:hover{
    box-shadow: none;
}

/*
Phần này gồm thông tin text và icon 3 chấm dọc
display flex là để phần text và phần 3 chấm hiển thị lên trên cùng 1 dòng
justify-content: space-between; là để cho 2 phần content trên trôi dạt sang 2 bên
width=100% so với thành phần cha.
*/
.right-section .reminders .notification .content{
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0;
    width: 100%;
}

/*
Style cho phần icon
*/
.right-section .reminders .notification .icon{
    display: flex;
    padding: 0.6rem;
    color: var(--color-white);
    background-color: var(--color-success);
    border-radius: 20%;
}

.right-section .reminders .notification.deactive .icon{
    background-color: var(--color-danger);
}

/*

*/
.right-section .reminders .add-reminder{
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--color-white);
    border: 2px dashed var(--color-primary);
    color: var(--color-primary);
    cursor: pointer;
}

.right-section .reminders .add-reminder:hover{
    background-color: var(--color-primary);
    color: white;
}

.right-section .reminders .add-reminder div{
    display: flex;
    align-items: center;
    gap: 0.6rem;
}

/*
Nếu kích cỡ độ rộng hiển thị của màn hình mà nhỏ hơn 1200px thì code ở trong đây sẽ có hiệu lực

*/
@media screen and (max-width: 1200px) {
    /*
    
    */
    .container{
        width: 95%;
        grid-template-columns: 7rem auto 23rem;
    }

    aside .logo h2{
        display: none;
    }

    aside .sidebar h3{
        display: none;
    }

    aside .sidebar a{
        width: 5.6rem;
    }

    aside .sidebar a:last-child{
        position: relative;
        margin-top: 1.8rem;
    }

    main .analyse{
        grid-template-columns: 1fr;
        gap: 0;
    }

    main .new-users .user-list .user{
        flex-basis: 40%;
    }

    main .recent-orders {
        width: 94%;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        margin: 2rem 0 0 0.8rem;
    }

    main .recent-orders table{
        width: 83vw;
    }

    main table thead tr th:last-child,
    main table thead tr th:first-child{
        display: none;
    }

    main table tbody tr td:last-child,
    main table tbody tr td:first-child{
        display: none;
    }

}

/*
Nếu kích cỡ độ rộng hiển thị của màn hình mà nhỏ hơn 768px thì code ở trong đây sẽ có hiệu lực

*/
@media screen and (max-width: 768px) {
    .container{
        width: 100%;
        grid-template-columns: 1fr;
        padding: 0 var(--padding-1);
    }

    aside{
        position: fixed;
        background-color: var(--color-white);
        width: 15rem;
        z-index: 3;
        box-shadow: 1rem 3rem 4rem var(--color-light);
        height: 100vh;
        left: -100%;
        display: none;
        animation: showMenu 0.4s ease forwards;
    }

    @keyframes showMenu {
       to{
        left: 0;
       } 
    }

    aside .logo{
        margin-left: 1rem;
    }

    aside .logo h2{
        display: inline;
    }

    aside .sidebar h3{
        display: inline;
    }

    aside .sidebar a{
        width: 100%;
        height: 3.4rem;
    }

    aside .sidebar a:last-child{
        position: absolute;
        bottom: 5rem;
    }

    aside .toggle .close{
        display: inline-block;
        cursor: pointer;
    }

    main{
        margin-top: 8rem;
        padding: 0 1rem;
    }

    main .new-users .user-list .user{
        flex-basis: 35%;
    }

    main .recent-orders{
        position: relative;
        margin: 3rem 0 0 0;
        width: 100%;
    }

    main .recent-orders table{
        width: 100%;
        margin: 0;
    }

    .right-section{
        width: 94%;
        margin: 0 auto 4rem;
    }

    .right-section .nav{
        position: fixed;
        top: 0;
        left: 0;
        align-items: center;
        background-color: var(--color-white);
        padding: 0 var(--padding-1);
        height: 4.6rem;
        width: 100%;
        z-index: 2;
        box-shadow: 0 1rem 1rem var(--color-light);
        margin: 0;
    }

    .right-section .nav .dark-mode{
        width: 4.4rem;
        position: absolute;
        left: 66%;
    }

    .right-section .profile .info{
        display: none;
    }

    .right-section .nav button{
        display: inline-block;
        background-color: transparent;
        cursor: pointer;
        color: var(--color-dark);
        position: absolute;
        left: 1rem;
    }

    .right-section .nav button span{
        font-size: 2rem;
    }

}